html,
body {
  margin: 0;
  padding: 0;
}

body {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  /*background: radial-gradient(#000, #cfc);*/
}

* {
  box-sizing: border-box;
}

.container {
  width: 100vw;
  height: 100vh;
  display: flex;
  overflow: hidden;
  align-items: center;
  justify-content: center;
  background-color: #262626;
  /* perspective: var(--perspective); */
  /* transition: perspective-origin 200ms ease-out; */
  /* perspective-origin: var(--perspectiveX) var(--perspectiveY); */

  transform-style: preserve-3d;
  position: absolute;

  perspective: 500px;
}

:root {
  /* --rotate-x: 0deg;
  --rotate-y: 0deg;
  --rotate-z: 0deg; */
  --border-width: 5px;
  --edge: 100px;

  --cols: 6;
  /* --rows: 6; */


  --col-w: calc(calc(100vw / var(--cols)) * 2);
  --col--px: calc(var(--col-w) - 25px);
  --col--px2: calc(var(--col-w) + 25px);

  --edge--px: calc(var(--edge) - 14px);
  --halfEdge: calc(var(--edge) / 2);
}

@keyframes sidebgbottom {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 var(--edge);
  }
}


@keyframes sidebgtop {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 calc(var(--edge) * -1);
  }
}

.topper {
  position: absolute;
  width: 200%;
  height: 100%;
  background-image:
    repeating-linear-gradient(to right, transparent, transparent 90px, #20827e 100px, transparent 110px, transparent 200px),
    /* repeating-linear-gradient(to right, transparent, transparent var(--col--px), #20827e var(--col--px2), transparent calc(var(--col-w) * 2)), */
    /* repeating-linear-gradient(to right, transparent, transparent var(--col--px), #20827e var(--col-w)), */
    repeating-linear-gradient(to bottom, transparent, transparent var(--col--px), #20827e var(--col-w));
  transform-origin: top;
  transform: rotateX(-75deg);
  animation-name: sidebgtop;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.botter {
  position: absolute;
  width: 200%;
  height: 100%;
  background-image:
    repeating-linear-gradient(to right, transparent, transparent var(--edge--px), #b63833 var(--edge)),
    repeating-linear-gradient(to bottom, transparent, transparent var(--edge--px), #b63833 var(--edge));
  transform-origin: bottom;
  transform: rotateX(75deg);
  animation-name: sidebgbottom;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}


/* .scene {
  transform-style: preserve-3d;
  position: absolute;

  width: 300px;
  height: 400px;
} */

/* .scene > div {
  --edge--px: calc(var(--edge) - 4px);
  background-image:
    repeating-linear-gradient(to right, transparent, transparent var(--edge--px), #600 var(--edge)),
    repeating-linear-gradient(to bottom, transparent, transparent var(--edge--px), #600 var(--edge));

  width: calc(var(--cols) * var(--edge));
  height: calc(var(--rows) * var(--edge));
}

.scene .top {
  top: 0;
  transform-origin: top;
  transform: rotateX(90deg) translateZ(var(--halfEdge));
} */

.scene .bottom {
  bottom: 0;
  transform-origin: bottom;
  transform: rotateX(-90deg);
}


@keyframes cuber {
  from {
    /* transform: translate(calc(0px - var(--halfEdge)), calc(0px - var(--halfEdge)), 0px); */
    transform: translateZ(0px);
  }
  to {
    /* transform: translate(calc(0px - var(--halfEdge)), calc(0px - var(--halfEdge)), 300px); */
    transform: translateZ(300px);
  }
}

.cube {
  position: absolute;
  transform-style: preserve-3d;
  /* transform:
    translate(calc(0px - var(--halfEdge)), calc(0px - var(--halfEdge)))
    rotateX(var(--rotate-x))
    rotateY(var(--rotate-y))
    rotateZ(var(--rotate-z)); */

  animation-name: cuber;
  margin-top: calc(0px - var(--edge));
  margin-left: calc(0px - var(--edge));
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  /* transform: translate(calc(0px - var(--halfEdge)), calc(0px - var(--halfEdge))); */
}

.cube > div {
  position: absolute;
  width: var(--edge);
  height: var(--edge);
  /* backface-visibility: visible; */
  border: var(--border-width) solid #666;
}


.cube .front {
  transform: rotateY(0deg) translateZ(var(--halfEdge));
}
.cube .right {
  transform: rotateY(90deg) translateZ(var(--halfEdge));
}
.cube .back {
  transform: rotateY(180deg) translateZ(var(--halfEdge));
}
.cube .left {
  transform: rotateY(-90deg) translateZ(var(--halfEdge));
}
.cube .top {
  transform: rotateX(90deg) translateZ(var(--halfEdge));
}
.cube .bottom {
  transform: rotateX(-90deg) translateZ(var(--halfEdge));
}
