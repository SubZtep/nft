html,
body {
  margin: 0;
  padding: 0;
}

body {
  width: 100vw;
  height: 100vh;
}

* {
  box-sizing: border-box;
}

@keyframes matrix-bg-bottom {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 var(--scene-edge);
  }
}

@keyframes matrix-bg-top {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 calc(0px - var(--scene-edge));
  }
}

@keyframes cube-move {
  from {
    transform: translateZ(calc((var(--scene-height) + var(--size)) * -1));
  }
  to {
    transform: translateZ(var(--hq-size));
  }
}

@keyframes cube-opacity {
  from {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

:root {
  --bg-color: #262626;
  --top-color: #20827e;
  --bottom-color: #b63833;
  --cube-color: #8a0303;
  --cube-bg-color: #8a030369;

  --scene-width: 300vw;
  --scene-height: 200vh;
  /* --scene-width: calc(var(--scene-height) * 1.5); */
  /* --scene-edge: 100px; */
  --scene-edge: calc(var(--scene-height) / 6);
  --scene-border: 30px;
  --scene-angle: 90deg;

  --matrix-speed: 1000ms;
  --cube-speed: 12000ms;

  --scene-edge-half: calc(var(--scene-edge) / 2);
  --scene-border-half: calc(var(--scene-border) / 2);

  --perspective: 500px;
}

.container {
  width: 100vw;
  height: 100vh;
  display: flex;
  overflow: hidden;
  justify-content: center;
  /* background-color: var(--bg-color); */
  background-image: linear-gradient(to bottom, var(--bg-color) 0%, var(--bg-color) 45%, #222 50%, var(--bg-color) 55%, var(--bg-color) 100%);
  transform-style: preserve-3d;
  position: absolute;
  perspective: var(--perspective);
  align-items: center;
}

.scene {
  position: absolute;
  width: var(--scene-width);
  height: var(--scene-height);
}

.scene.top {
  top: 0;
  transform-origin: top;
  transform: rotateX(calc(var(--scene-angle) * -1));
  animation-name: matrix-bg-top;
  --matrix-color: var(--top-color);
}

.scene.top.shadow {
  top: 1px;
  background-image: linear-gradient(to bottom, transparent, var(--bg-color) 95%);
}

.scene.bottom {
  bottom: 0;
  transform-origin: bottom;
  transform: rotateX(var(--scene-angle));
  animation-name: matrix-bg-bottom;
  --matrix-color: var(--bottom-color);
}

.scene.bottom.shadow {
  bottom: 1px;
  background-image: linear-gradient(to top, transparent, var(--bg-color) 95%);
}

.scene.matrix {
  background-image: repeating-linear-gradient(
      to right,
      transparent 0,
      transparent calc(var(--scene-edge-half) - var(--scene-border-half)),
      var(--matrix-color) var(--scene-edge-half),
      transparent calc(var(--scene-edge-half) + var(--scene-border-half)),
      transparent var(--scene-edge)
    ),
    repeating-linear-gradient(
      to bottom,
      transparent 0,
      transparent calc(var(--scene-edge-half) - var(--scene-border-half)),
      var(--matrix-color) var(--scene-edge-half),
      transparent calc(var(--scene-edge-half) + var(--scene-border-half)),
      transparent var(--scene-edge)
    );
  animation-duration: var(--matrix-speed);
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.cube {
  position: absolute;
  --edge-multi: 2;
  --size: calc(var(--scene-edge) * var(--edge-multi));
  --minus-size: calc(var(--size) * -1);
  --half-size: calc(var(--size) / 2);
  --minus-half-size: calc(var(--half-size) * -1);
  --quarter-size: calc(var(--size) / 4);
  --minus-quarter-size: calc(var(--quarter-size) * -1);
  --octave-size: calc(var(--size) / 8);
  --hq-size: calc(var(--half-size) + var(--quarter-size));
  --minus-hq-size: calc(var(--hq-size) * -1);

  --cube-quarter-speed: calc(var(--cube-speed) / 4);

  transform-style: preserve-3d;

  animation-name: cube-move;
  animation-duration: var(--cube-speed);
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  --scene-border-quarter: calc(var(--scene-border) / 4);
}

.cube > div {
  position: absolute;
  width: 100%;
  height: 100%;

  opacity: 0;
  animation-name: cube-opacity;
  animation-duration: var(--cube-speed);
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

.cube.nr1, .cube.nr1 > div {
  animation-delay: 0;
}
.cube.nr2, .cube.nr2 > div {
  animation-delay: calc(var(--cube-speed) * 0.25);
}
.cube.nr3, .cube.nr3 > div {
  animation-delay: calc(var(--cube-speed) * 0.5);
}
.cube.nr4, .cube.nr4 > div {
  animation-delay: calc(var(--cube-speed) * 0.75);
}

.cube > .front, .cube > .back {
  width: var(--size);
  height: var(--size);
  border-radius: var(--scene-border-quarter);
  box-shadow: 0 0 var(--scene-border-quarter) var(--scene-border-quarter) var(--cube-color),
    inset 0 0 var(--scene-border-quarter) var(--scene-border-quarter) var(--cube-color);
}

.cube > .front {
  transform: translateX(var(--minus-half-size)) translateY(var(--minus-half-size)) translateZ(var(--quarter-size));
}
.cube > .back {
  transform: translateX(var(--minus-half-size)) translateY(var(--minus-half-size)) translateZ(var(--minus-quarter-size));
}
.cube > .left {
  width: var(--half-size);
  height: var(--size);
  transform: translateX(var(--minus-hq-size)) translateY(var(--minus-half-size)) rotateY(90deg);
  background-image: radial-gradient(circle, var(--cube-bg-color) 69%, transparent 100%);
}

.cube > .right {
  width: var(--half-size);
  height: var(--size);
  transform:  translateX(var(--quarter-size)) translateY(var(--minus-half-size)) rotateY(90deg);
  background-image: radial-gradient(circle, var(--cube-bg-color) 69%, transparent 100%);
}

.cube > .top {
  width: var(--size);
  height: var(--half-size);
  transform: translateX(var(--minus-half-size)) translateY(var(--minus-hq-size)) rotateX(90deg);
  background-image: radial-gradient(circle, var(--cube-bg-color) 69%, transparent 100%);
}

.cube > .bottom {
  width: var(--size);
  height: var(--half-size);
  transform: translateX(var(--minus-half-size)) translateY(var(--quarter-size)) rotateX(90deg);
  background-image: radial-gradient(circle, var(--cube-bg-color) 69%, transparent 100%);
}
