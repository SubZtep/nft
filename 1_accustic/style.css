html,
body {
  margin: 0;
  padding: 0;
}

body {
  width: 100vw;
  height: 100vh;
  /* overflow: hidden; */
}

* {
  box-sizing: border-box;
}

@keyframes matrix-bg-bottom {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 var(--scene-edge);
  }
}

@keyframes matrix-bg-top {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 calc(0px - var(--scene-edge));
  }
}

@keyframes cube-move {
  from {
    transform: translateZ(-1000vh);
  }
  to {
    transform: translateZ(100vh);
  }
}

:root {
  --bg-color: #262626;
  --top-color: #20827e;
  --bottom-color: #b63833;

  /* --scene-width: 300vw; */
  --scene-height: 200vh;
  --scene-width: calc(var(--scene-height) * 1.5);
  /* --scene-edge: 100px; */
  --scene-edge: calc(var(--scene-height) / 6);
  --scene-border: 30px;
  --scene-angle: 90deg;

  --scene-edge-half: calc(var(--scene-edge) / 2);
  --scene-border-half: calc(var(--scene-border) / 2);
}

.container {
  width: 100vw;
  height: 100vh;
  display: flex;
  overflow: hidden;
  justify-content: center;
  background-color: var(--bg-color);
  transform-style: preserve-3d;
  position: absolute;
  perspective: 500px;

  align-items: center;
}

.scene {
  position: absolute;
  width: var(--scene-width);
  height: var(--scene-height);
}

.scene.top {
  top: 0;
  transform-origin: top;
  transform: rotateX(calc(var(--scene-angle) * -1));
  animation-name: matrix-bg-top;
  --matrix-color: var(--top-color);
}

.scene.top.shadow {
  top: 1px;
  background-image: linear-gradient(to bottom, transparent, var(--bg-color) 95%);
}

.scene.bottom {
  bottom: 0;
  transform-origin: bottom;
  transform: rotateX(var(--scene-angle));
  animation-name: matrix-bg-bottom;
  --matrix-color: var(--bottom-color);
}

.scene.bottom.shadow {
  bottom: 1px;
  background-image: linear-gradient(to top, transparent, var(--bg-color) 95%);
}

.scene.matrix {
  background-image: repeating-linear-gradient(
      to right,
      transparent 0,
      transparent calc(var(--scene-edge-half) - var(--scene-border-half)),
      var(--matrix-color) var(--scene-edge-half),
      transparent calc(var(--scene-edge-half) + var(--scene-border-half)),
      transparent var(--scene-edge)
    ),
    repeating-linear-gradient(
      to bottom,
      transparent 0,
      transparent calc(var(--scene-edge-half) - var(--scene-border-half)),
      var(--matrix-color) var(--scene-edge-half),
      transparent calc(var(--scene-edge-half) + var(--scene-border-half)),
      transparent var(--scene-edge)
    );
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.cube {
  position: absolute;
  --edge-multi: 2;
  --z: -100vh;
  --rot: 0deg;
  --size: calc(var(--scene-edge) * var(--edge-multi));
  /* --size: var(--scene-height); */
  /* --size: calc(var(--scene-edge) * 2); */
  --half-size: calc(var(--size) / 2);
  --quarter-size: calc(var(--size) / 4);
  --octave-size: calc(var(--size) / 8);

  width: var(--size);
  height: var(--size);
  background-color: #00f1;

  transform-style: preserve-3d;

  transform: translateZ(var(--z)) rotate3d(1, 1, 1, var(--rot));

  /* animation-name: cube-move; */
  animation-duration: 4s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  --scene-border-half-half: calc(var(--scene-border-half) / 2);
}

.cube > div {
  position: absolute;
  width: 100%;
  height: 100%;
  /* background-repeat: no-repeat; */
  background-color: transparent;

  /* background-size: calc(var(--size) - var(--scene-border)); */
  /* background-position: var(--scene-border-half) var(--scene-border-half); */
  /* box-shadow: 10px 5px 5px yellow; */
  border-radius: var(--scene-border-half);
  box-shadow: 0 0 var(--scene-border-half-half) var(--scene-border-half-half) red,
    inset 0 0 var(--scene-border-half-half) var(--scene-border-half-half) red;
  /* box-shadow: 0 0 var(--scene-border-half) var(--scene-border-half) red,
  inset 0 0 var(--scene-border-half) var(--scene-border-half) red; */
  /* background-image:
    linear-gradient(
      to right,
      red 0,
      transparent var(--scene-border-half),
      transparent calc(var(--size) - var(--scene-border-half)),
      red var(--size)),
    linear-gradient(
      to bottom,
      red 0,
      transparent var(--scene-border-half),
      transparent calc(var(--size) - var(--scene-border-half)),
      red var(--size)); */
  /* background-image:
    linear-gradient(
      to right,
      transparent 0,
      red var(--scene-border-half),
      transparent var(--scene-border),
      transparent calc(var(--size) - var(--scene-border)),
      red calc(var(--size) - var(--scene-border-half)),
      transparent var(--size)),
    linear-gradient(
      to bottom,
      transparent 0,
      red var(--scene-border-half),
      transparent var(--scene-border),
      transparent calc(var(--size) - var(--scene-border)),
      red calc(var(--size) - var(--scene-border-half)),
      transparent var(--size)); */
}

.cube.nr1 {
  transform: translateZ(-100px);
}

.cube > .front {
  /* transform: rotateY(0deg) translateZ(calc(var(--half-size) + var(--border-width-px))); */
  /* border-color: red; */
  transform: rotateY(0deg) translateZ(var(--octave-size));
}
.cube > .right {
  /* transform: rotateY(90deg) translateZ(calc(var(--half-size) + var(--border-width-px))); */
  transform: rotateY(90deg) translateZ(var(--half-size));
}
.cube > .back {
  transform: rotateY(180deg) translateZ(var(--octave-size));
}
.cube > .left {
  transform: rotateY(-90deg) translateZ(var(--half-size));
}
.cube > .top {
  /* transform: rotateX(90deg) translateZ(calc(var(--half-size) + var(--border-width-px))); */
  transform: rotateX(90deg) translateZ(var(--half-size));
}
.cube > .bottom {
  transform: rotateX(-90deg) translateZ(var(--half-size));
}
